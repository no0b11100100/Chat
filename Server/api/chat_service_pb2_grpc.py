# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chat_service_pb2 as chat__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ChatStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getChats = channel.unary_unary(
                '/chat.Chat/getChats',
                request_serializer=chat__service__pb2.UserID.SerializeToString,
                response_deserializer=chat__service__pb2.Chats.FromString,
                )
        self.getMessages = channel.unary_unary(
                '/chat.Chat/getMessages',
                request_serializer=chat__service__pb2.MessageChan.SerializeToString,
                response_deserializer=chat__service__pb2.Messages.FromString,
                )
        self.readMessage = channel.unary_unary(
                '/chat.Chat/readMessage',
                request_serializer=chat__service__pb2.ReadMessage.SerializeToString,
                response_deserializer=chat__service__pb2.Status.FromString,
                )
        self.editChat = channel.unary_unary(
                '/chat.Chat/editChat',
                request_serializer=chat__service__pb2.ChatData.SerializeToString,
                response_deserializer=chat__service__pb2.Status.FromString,
                )
        self.chatChanged = channel.unary_stream(
                '/chat.Chat/chatChanged',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=chat__service__pb2.ChatData.FromString,
                )
        self.sendMessage = channel.unary_unary(
                '/chat.Chat/sendMessage',
                request_serializer=chat__service__pb2.ExchangedMessage.SerializeToString,
                response_deserializer=chat__service__pb2.Status.FromString,
                )
        self.recieveMessage = channel.unary_stream(
                '/chat.Chat/recieveMessage',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=chat__service__pb2.ExchangedMessage.FromString,
                )


class ChatServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getChats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def editChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def chatChanged(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def recieveMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getChats': grpc.unary_unary_rpc_method_handler(
                    servicer.getChats,
                    request_deserializer=chat__service__pb2.UserID.FromString,
                    response_serializer=chat__service__pb2.Chats.SerializeToString,
            ),
            'getMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.getMessages,
                    request_deserializer=chat__service__pb2.MessageChan.FromString,
                    response_serializer=chat__service__pb2.Messages.SerializeToString,
            ),
            'readMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.readMessage,
                    request_deserializer=chat__service__pb2.ReadMessage.FromString,
                    response_serializer=chat__service__pb2.Status.SerializeToString,
            ),
            'editChat': grpc.unary_unary_rpc_method_handler(
                    servicer.editChat,
                    request_deserializer=chat__service__pb2.ChatData.FromString,
                    response_serializer=chat__service__pb2.Status.SerializeToString,
            ),
            'chatChanged': grpc.unary_stream_rpc_method_handler(
                    servicer.chatChanged,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=chat__service__pb2.ChatData.SerializeToString,
            ),
            'sendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMessage,
                    request_deserializer=chat__service__pb2.ExchangedMessage.FromString,
                    response_serializer=chat__service__pb2.Status.SerializeToString,
            ),
            'recieveMessage': grpc.unary_stream_rpc_method_handler(
                    servicer.recieveMessage,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=chat__service__pb2.ExchangedMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.Chat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Chat(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getChats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chat/getChats',
            chat__service__pb2.UserID.SerializeToString,
            chat__service__pb2.Chats.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chat/getMessages',
            chat__service__pb2.MessageChan.SerializeToString,
            chat__service__pb2.Messages.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def readMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chat/readMessage',
            chat__service__pb2.ReadMessage.SerializeToString,
            chat__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def editChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chat/editChat',
            chat__service__pb2.ChatData.SerializeToString,
            chat__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def chatChanged(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chat.Chat/chatChanged',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            chat__service__pb2.ChatData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chat/sendMessage',
            chat__service__pb2.ExchangedMessage.SerializeToString,
            chat__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def recieveMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chat.Chat/recieveMessage',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            chat__service__pb2.ExchangedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
